apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --verbose
    kompose.version: 1.27.0 (b0ed6a2c9)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --verbose
        kompose.version: 1.27.0 (b0ed6a2c9)
      creationTimestamp: null
      labels:
        io.kompose.service: mongo
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_DATABASE
              value: desafio
            - name: MONGO_INITDB_PWD
              value: desafio
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: admin
            - name: MONGO_INITDB_ROOT_USERNAME
              value: admin
            - name: MONGO_INITDB_USER
              value: desafio
          image: mongo
          name: mongo
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - name: mongo-init
              mountPath: /docker-entrypoint-initdb.d/mongo-init.sh
              subPath: mongo-init.sh
          # volumeMounts:
          #   - mountPath: /docker-entrypoint-initdb.d/
          #     name: mongo-claim0
          #     readOnly: true
      restartPolicy: Always
      volumes:
        - name: mongo-init
          configMap:
            name: mongo-init
            items:
              - key: mongo-init.sh
                path: mongo-init.sh
        # - name: mongo-claim0
        #   persistentVolumeClaim:
        #     claimName: mongo-claim0
        #     readOnly: true
status: {}
